[{"E:\\student\\noi_that_UI\\react_native\\web\\adminnoithat\\src\\index.js":"1","E:\\student\\noi_that_UI\\react_native\\web\\adminnoithat\\src\\pages\\main\\order-cart\\component\\OrderCartItem.tsx":"2"},{"size":500,"mtime":1608454641316,"results":"3","hashOfConfig":"4"},{"size":8039,"mtime":1610249248176,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ujytsw",{"filePath":"8","messages":"9","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"E:\\student\\noi_that_UI\\react_native\\web\\adminnoithat\\src\\index.js",[],"E:\\student\\noi_that_UI\\react_native\\web\\adminnoithat\\src\\pages\\main\\order-cart\\component\\OrderCartItem.tsx",["11","12","13","14","15","16"],"import React, { useState, useCallback } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport * as R from \"ramda\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core';\r\n\r\nimport Statuses from '../../../../asset/common/Statuses';\r\nimport StatusesVi from '../../../../asset/common/StatusesVi';\r\nimport OrderCartServices from '../../../../services/api/OrderCartServices';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Creators } from '../../../../redux/reducer/user/OrderCarReducer';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    status: { fontSize: 12 },\r\n    label: { fontSize: 10, textTransform: \"none\" }\r\n})\r\ninterface Props extends WithStyles<typeof styles> {\r\n    item: any,\r\n    listItem: Array<any>,\r\n    key: number;\r\n    onLoad: Function\r\n}\r\n\r\nconst OrderCartItem = ({ item, listItem, classes, key, onLoad }: Props) => {\r\n    const [load, setLoad] = useState(false);\r\n    const [open, setOpen] = useState(false)\r\n    const [sumTotal, setTotal] = useState([]);\r\n    const sumDetail = (a: number, b: number) => { return R.multiply(a, b) }\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const onClickRoute = useCallback((route) => {\r\n        history.push(`/order/cart/${route}`)\r\n    }, [history])\r\n    const onUpdateStatus = useCallback((id: number, status: string) => {\r\n        if (status.indexOf(Statuses.PREPARING) !== -1) {\r\n            history.push(\"/order/cart/bill\");\r\n        } else if (status.indexOf(Statuses.TRANSPORT) === -1) {\r\n            OrderCartServices.updateStatus(id, status);\r\n            dispatch(Creators.orderRequest());\r\n        }\r\n        onLoad()\r\n    }, [onLoad])\r\n\r\n    const ButtonOrder = useCallback(({ status }: { status: string }) => {\r\n        let title;\r\n        let label;\r\n        if (status.indexOf(\"unpaid\") !== -1) {\r\n            label = StatusesVi.UNPAID;\r\n\r\n        }\r\n        else { label = \"\" }\r\n\r\n        if (status.indexOf(\"order\") !== -1) {\r\n            title = StatusesVi.ORDER\r\n        }\r\n        else if (status.indexOf(\"preparing\") !== -1) {\r\n            title = StatusesVi.PREPARING\r\n        }\r\n        else if (status.indexOf(\"createbill\") !== -1) {\r\n            title = StatusesVi.CREATEBill\r\n        }\r\n        else if (status.indexOf(\"transporting\") !== -1) {\r\n            title = StatusesVi.TRANSPORTING;\r\n        }\r\n        else if (status.indexOf(\"complete\") !== -1) {\r\n            title = StatusesVi.COMPLETE\r\n        }\r\n\r\n        return <>\r\n            <Button variant=\"contained\" className={classes.status} onClick={() => onUpdateStatus(item.id, status)}>\r\n                {title}\r\n                {label !== \"\" && <Typography component=\"h5\" className={classes.label}>({label})</Typography>}\r\n            </Button>\r\n\r\n        </>\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment key={key} >\r\n            {item && <>\r\n\r\n                <TableRow >\r\n                    <TableCell>\r\n                        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                        </IconButton>\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\" onClick={() => onClickRoute(\"detail\")}>\r\n                        {item.code ?? \"\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{item.nameCustomer !== \"\" ? item.nameCustomer : item.customer.name}</TableCell>\r\n                    <TableCell align=\"right\">{item.phoneCustomer !== \"\" ? item.phoneCustomer : item.customer.username}</TableCell>\r\n                    <TableCell align=\"right\">{item.adddress !== \"\" ? item.adddress : \"235, Hoàng Quốc việt, Hà Nội\"}</TableCell>\r\n                    <TableCell align=\"right\"></TableCell>\r\n                    <TableCell align=\"right\"><ButtonOrder status={item.status} /></TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                            <Box margin={1}>\r\n                                <Typography component=\"h6\">\r\n                                    Chi tiết đơn hàng\r\n                                </Typography>\r\n                                <Table size=\"small\" aria-label=\"purchases\">\r\n                                    <TableBody>\r\n                                        {/*  */}\r\n                                        <TableContainer component={Paper}>\r\n                                            <Table style={{ minWidth: 700 }} aria-label=\"spanning table\">\r\n                                                <TableHead>\r\n\r\n                                                    <TableRow>\r\n                                                        <TableCell>Tên sản phẩm</TableCell>\r\n                                                        <TableCell align=\"right\">Màu sắc</TableCell>\r\n                                                        <TableCell align=\"right\">Giá bán</TableCell>\r\n                                                        <TableCell align=\"right\">Số lượng</TableCell>\r\n                                                        <TableCell align=\"right\">Thành tiền</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {listItem.length !== 0 && listItem && listItem.map(itemDetail => (\r\n                                                        <>\r\n                                                            {itemDetail && <TableRow>\r\n                                                                <TableCell>{itemDetail.product.name}</TableCell>\r\n                                                                <TableCell align=\"right\">{itemDetail.product.productDetail.colors}</TableCell>\r\n                                                                <TableCell align=\"right\">{itemDetail.price}</TableCell>\r\n                                                                <TableCell align=\"right\">{itemDetail.number}</TableCell>\r\n                                                                <TableCell align=\"right\">{sumDetail(itemDetail.price, itemDetail.number)}</TableCell>\r\n                                                            </TableRow>}\r\n                                                        </>\r\n\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n\r\n                                        {/*  */}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Collapse>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(OrderCartItem);",{"ruleId":"17","severity":1,"message":"18","line":38,"column":12,"nodeType":"19","messageId":"20","endLine":38,"endColumn":16},{"ruleId":"17","severity":1,"message":"21","line":38,"column":18,"nodeType":"19","messageId":"20","endLine":38,"endColumn":25},{"ruleId":"17","severity":1,"message":"22","line":40,"column":12,"nodeType":"19","messageId":"20","endLine":40,"endColumn":20},{"ruleId":"17","severity":1,"message":"23","line":40,"column":22,"nodeType":"19","messageId":"20","endLine":40,"endColumn":30},{"ruleId":"24","severity":1,"message":"25","line":55,"column":8,"nodeType":"26","endLine":55,"endColumn":16,"suggestions":"27"},{"ruleId":"24","severity":1,"message":"28","line":89,"column":8,"nodeType":"26","endLine":89,"endColumn":10,"suggestions":"29"},"@typescript-eslint/no-unused-vars","'load' is assigned a value but never used.","Identifier","unusedVar","'setLoad' is assigned a value but never used.","'sumTotal' is assigned a value but never used.","'setTotal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["30"],"React Hook useCallback has missing dependencies: 'classes.label', 'classes.status', 'item.id', and 'onUpdateStatus'. Either include them or remove the dependency array.",["31"],{"desc":"32","fix":"33"},{"desc":"34","fix":"35"},"Update the dependencies array to be: [dispatch, history, onLoad]",{"range":"36","text":"37"},"Update the dependencies array to be: [classes.label, classes.status, item.id, onUpdateStatus]",{"range":"38","text":"39"},[2450,2458],"[dispatch, history, onLoad]",[3568,3570],"[classes.label, classes.status, item.id, onUpdateStatus]"]